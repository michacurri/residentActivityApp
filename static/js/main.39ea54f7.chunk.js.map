{"version":3,"sources":["firebase.js","components/admin/AdminCreateActivity.js","components/admin/AdminShowActivities.js","components/admin/UserData.js","components/admin/AdminPage.js","components/login/AdminLoginButton.js","components/user/UserShowActivities.js","components/user/UserPage.js","components/login/UserLoginButton.js","components/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AdminCreateActivity","handleChange","event","setState","target","name","value","handleChecked","id","String","checked","handleSubmit","preventDefault","dbRef","database","ref","newActivities","activityName","state","activityDate","activitySpotsAvail","activityAccessible","activityMeal","activityDescription","push","activities","className","htmlFor","type","this","onChange","maxLength","rows","placeholder","onClick","Component","AdminShowActivities","deleteActivity","key","child","remove","console","log","on","response","newState","data","val","activity","map","UserData","residents","residentData","resident","suite","first","last","hasCaregiver","requiresAssist","mealPreference","email","AdminPage","AdminLoginButton","props","handleAdminClick","UserShowActivities","UserPage","UserLoginButton","handleUserClick","LoginPage","bind","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.39ea54f7.chunk.js","sourcesContent":["// firebase.js\n\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDmWwuvLnKOdbyyMY71auoY-uhRkvQuK_E\",\n  authDomain: \"excursions-userdata.firebaseapp.com\",\n  databaseURL: \"https://excursions-userdata.firebaseio.com\",\n  projectId: \"excursions-userdata\",\n  storageBucket: \"excursions-userdata.appspot.com\",\n  messagingSenderId: \"955447819901\",\n  appId: \"1:955447819901:web:ef6954f4547765e046fb14\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","// AdminCreateActivity.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport firebase from \"../../firebase\";\r\n\r\nclass AdminCreateActivity extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      activities: [],\r\n      activityName: \"\",\r\n      activitySpotsAvail: 0,\r\n      activityDate: {},\r\n      activityAccessible: false,\r\n      activityMeal: false,\r\n      activityDescription: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // handle CHECKBOXES\r\n  handleChecked = (event) => {\r\n    this.setState({\r\n      [event.target.id]: String(event.target.checked),\r\n    })       \r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const dbRef = firebase.database().ref(\"activities\");\r\n\r\n    const newActivities = {\r\n      activityName: this.state.activityName,\r\n      activityDate: this.state.activityDate,\r\n      activitySpotsAvail: this.state.activitySpotsAvail,\r\n      activityAccessible: this.state.activityAccessible,\r\n      activityMeal: this.state.activityMeal,\r\n      activityDescription: this.state.activityDescription,\r\n    };\r\n\r\n    dbRef.push(newActivities);\r\n\r\n    // clear the inputs\r\n    this.setState({\r\n      activityName: \"\",\r\n      activityDate: {},\r\n      activitySpotsAvail: 0,\r\n      activityAccessible: false,\r\n      activityMeal: false,\r\n      activityDescription: \"\",\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"adminInputActivityForm\">\r\n        <h3>activity maker</h3>\r\n        <form>\r\n          <label htmlFor=\"activityName\">Activity Name</label>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.activityName}\r\n            onChange={this.handleChange}\r\n            name=\"activityName\"\r\n            id=\"activityName\"\r\n          />\r\n          <br />\r\n\r\n          <label htmlFor=\"activityDate\">Date of Activity</label>\r\n          <br />\r\n          <input\r\n            type=\"date\"\r\n            value={this.state.activityDate}\r\n            onChange={this.handleChange}\r\n            name=\"activityDate\"\r\n            id=\"activityDate\"\r\n          />\r\n          <br />\r\n          <label htmlFor=\"activityDescription\">\r\n            Description of the Activity\r\n          </label>\r\n          <textarea \r\n          type=\"textarea\"\r\n          maxLength=\"140\"\r\n          rows=\"5\"\r\n          placeholder=\"Enjoy an elegant evening out with the Toronto Symphony Orchestra...\"\r\n          value={this.state.activityDescription}\r\n          onChange={this.handleChange}\r\n          name=\"activityDescription\"\r\n          id=\"activityDescription\"\r\n          />\r\n          <br />\r\n\r\n          <label htmlFor=\"activityAccessible\">\r\n            Is this activity accessible?\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={this.state.activityAccessible}\r\n            onChange={this.handleChecked}\r\n            name=\"activityAccessible\"\r\n            id=\"activityAccessible\"\r\n          />\r\n          <br />\r\n\r\n          <label htmlFor=\"activityMeal\">Is a meal included?</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={this.state.activityMeal}\r\n            onChange={this.handleChecked}\r\n            name=\"activityMeal\"\r\n            id=\"activityMeal\"\r\n          />\r\n          <br />\r\n\r\n          <label htmlFor=\"activitySpotsAvail\">Space Available</label>\r\n          <br />\r\n          <input\r\n            type=\"number\"\r\n            value={this.state.activitySpotsAvail}\r\n            onChange={this.handleChange}\r\n            name=\"activitySpotsAvail\"\r\n            id=\"activitySpotsAvail\"\r\n            placeholder=\"#\"\r\n          />\r\n          <br />\r\n\r\n          <button onClick={this.handleSubmit}>\r\n            Add Activity to the Calendar\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminCreateActivity;\r\n","// AdminShowActivities.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport firebase from \"../../firebase\";\r\n\r\nclass AdminShowActivities extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      activities: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref(\"activities\");\r\n\r\n    dbRef.on(\"value\", (response) => {\r\n      const newState = [];\r\n      const data = response.val();\r\n\r\n      for (let key in data) {\r\n        newState.push({\r\n          activity: data[key],\r\n          key: key,\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        activities: newState,\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteActivity = (key) => {\r\n    const dbRef = firebase.database().ref('activities');\r\n    dbRef.child(key).remove();\r\n    console.log(\"delete pushed\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"adminShowActivities\">\r\n          {this.state.activities.map(({ key, activity }) => {\r\n            return (\r\n                <ul key={key} \r\n                className=\"adminListActivities\">\r\n                  <li>Name: {activity.activityName}</li>\r\n                  <li>Date: {activity.activityDate}</li>\r\n                  <button onClick={() => {\r\n                      this.deleteActivity(key);\r\n                    }}>Delete</button>\r\n                </ul>\r\n            );\r\n          })}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AdminShowActivities;\r\n","// UserData.js\r\n\r\nimport firebase from \"../../firebase\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass UserData extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      residents: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref(\"userData\");\r\n\r\n    dbRef.on(\"value\", (response) => {\r\n      const residentData = [];\r\n      const data = response.val();\r\n\r\n      for (let key in data) {\r\n        residentData.push({\r\n          resident: data[key],\r\n          id: key,\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        residents: residentData,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"residentData\">\r\n        <table>\r\n          <caption>\r\n            <h2>Resident Data</h2>\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <th>Suite</th>\r\n              <th>First</th>\r\n              <th>Last</th>\r\n              <th>Caregiver</th>\r\n              <th>Assistance</th>\r\n              <th>Meal</th>\r\n              <th>email</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n        {this.state.residents.map(({id, resident}) => {\r\n          return (\r\n            <table key={id}>\r\n              <tbody>\r\n                <tr>\r\n                  <th></th>\r\n                  <td name=\"suite\">{resident.suite}</td>\r\n                  <td name=\"first\">{resident.first}</td>\r\n                  <td name=\"last\">{resident.last}</td>\r\n                  <td name=\"hasCaregiver\">{String(resident.hasCaregiver)}</td>\r\n                  <td name=\"requiresAssist\">{String(resident.requiresAssist)}</td>\r\n                  <td name=\"mealPreference\">{resident.mealPreference}</td>\r\n                  <td name=\"email\">{resident.email}</td>\r\n                 \r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          );\r\n        })}\r\n        ;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserData;\r\n","// AdminPage.js\r\nimport React, { Component } from \"react\";\r\nimport AdminCreateActivity from \"./AdminCreateActivity\";\r\nimport AdminShowActivities from \"./AdminShowActivities\"\r\nimport UserData from \"./UserData\";\r\n\r\nclass AdminPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"adminPage\">\r\n        <h2>ADMIN</h2>\r\n        <AdminCreateActivity />\r\n        <AdminShowActivities />\r\n        <UserData />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminPage;\r\n","// AdminLoginButton.js\r\n\r\nimport React, { Component } from \"react\";\r\n// import AdminPage from \"../admin/AdminPage\";\r\n\r\nclass AdminLoginButton extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        name=\"AdminPage\"\r\n        className=\"navButton\"\r\n        onClick={this.props.handleAdminClick}\r\n      >\r\n        Admin\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminLoginButton;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport firebase from '../../firebase'\r\n\r\nclass UserShowActivities extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      activities: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref(\"activities\");\r\n\r\n    dbRef.on(\"value\", (response) => {\r\n      const newState = [];\r\n      const data = response.val();\r\n\r\n      for (let key in data) {\r\n        newState.push({\r\n          activity: data[key],\r\n          key: key,\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        activities: newState,\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h3>Activity Options</h3>\r\n        {this.state.activities.map(({ key, activity }) => {\r\n          return (\r\n            <div key={key} className=\"userShowActivities\">\r\n              <h3 className=\"userLiName\">{activity.activityName}</h3>\r\n              <h4 className=\"userLiDate\">Date: {activity.activityDate}</h4>\r\n              <h5 className=\"userLiDescription\">{activity.activityDescription}</h5>\r\n              <h5 className=\"userLiAccs\">\r\n                Accessible: {activity.activityAccessible ? <h5>Yes</h5> : <h5>No</h5>}\r\n              </h5>\r\n              <h5 className=\"userLiMeal\">\r\n                Meal Included: {activity.activityMeal ? <h5>Yes</h5> : <h5>No</h5>}\r\n              </h5>\r\n              <h3 className=\"userLiSpots\">\r\n                Available Spots: {activity.activitySpotsAvail}\r\n              </h3>\r\n            </div>\r\n          );\r\n        })}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserShowActivities","// UserPage.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport UserShowActivities from \"./UserShowActivities\";\r\n\r\nclass UserPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"userPage\">\r\n        <h2>USER</h2>\r\n        <UserShowActivities />\r\n        {/* <ActivityOptionsBlock /> */}\r\n        {/* <UserResponseInput /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPage;\r\n","// UserLoginButton.js\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass UserLoginButton extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        name=\"UserButton\"\r\n        className=\"navButton\"\r\n        onClick={this.props.handleUserClick}\r\n      >\r\n        User\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserLoginButton;\r\n","// LoginPage.js\r\nimport React, { Component, Fragment } from \"react\";\r\nimport AdminPage from \"./admin/AdminPage\";\r\nimport AdminLoginButton from \"./login/AdminLoginButton\";\r\nimport UserPage from \"./user/UserPage\";\r\nimport UserLoginButton from \"./login/UserLoginButton\";\r\n\r\nclass LoginPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      AdminPage: false,\r\n      UserPage: false,\r\n    };\r\n    this.handleAdminClick = this.handleAdminClick.bind(this);\r\n    this.handleUserClick = this.handleUserClick.bind(this);\r\n  }\r\n\r\n  handleAdminClick() {\r\n    this.setState({\r\n      AdminPage: this.state.AdminPage ? false : true,\r\n      UserPage: false,\r\n    });\r\n  }\r\n\r\n  handleUserClick() {\r\n    this.setState({\r\n      UserPage: this.state.UserPage ? false : true,\r\n      AdminPage: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"navBar\">\r\n          <h1>Resident Activity App</h1>\r\n          <div className=\"buttonBar\">\r\n            <AdminLoginButton handleAdminClick={this.handleAdminClick} />\r\n            <UserLoginButton handleUserClick={this.handleUserClick} />\r\n          </div>\r\n        </div>\r\n        {this.state.AdminPage ? <AdminPage /> : null}\r\n        {this.state.UserPage ? <UserPage /> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport LoginPage from \"./components/LoginPage\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <LoginPage />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}